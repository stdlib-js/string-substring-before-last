{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns the part of a string before the last occurrence of a specified substring.\n*\n* @param {string} str - input string\n* @param {string} search - search value\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @returns {string} substring\n*\n* @example\n* var out = substringBeforeLast( 'abcba', 'b' );\n* // returns 'abc'\n*\n* @example\n* var out = substringBeforeLast( 'Hello World, my friend!', ' ' );\n* // returns 'Hello World, my'\n*\n* @example\n* var out = substringBeforeLast( 'abcba', ' ' );\n* // returns 'abcba'\n*\n* @example\n* var out = substringBeforeLast( 'abcba', '' );\n* // returns 'abcba'\n*/\nfunction substringBeforeLast( str, search ) {\n\tvar idx;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isString( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', search ) );\n\t}\n\tidx = str.lastIndexOf( search );\n\tif ( idx === -1 ) {\n\t\treturn str;\n\t}\n\treturn str.substring( 0, idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = substringBeforeLast;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the part of a string before the last occurrence of a specified substring.\n*\n* @module @stdlib/string-substring-before-last\n*\n* @example\n* var substringBeforeLast = require( '@stdlib/string-substring-before-last' );\n*\n* var str = 'Beep Boop Beep';\n* var out = substringBeforeLast( str, 'Beep' );\n* // returns 'Beep Boop '\n*\n* out = substringBeforeLast( str, 'Boop' );\n* // returns 'Beep '\n*/\n\n// MODULES //\n\nvar substringBeforeLast = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = substringBeforeLast;\n"],"names":["isString","require$$0","isPrimitive","format","require$$1","lib","str","search","idx","TypeError","lastIndexOf","substring"],"mappings":";;qKAsBA,IAAIA,EAAWC,EAAsCC,YACjDC,EAASC,EAgDb,IC5BAC,EDUA,SAA8BC,EAAKC,GAClC,IAAIC,EACJ,IAAMR,EAAUM,GACf,MAAM,IAAIG,UAAWN,EAAQ,kEAAmEG,IAEjG,IAAMN,EAAUO,GACf,MAAM,IAAIE,UAAWN,EAAQ,mEAAoEI,IAGlG,OAAc,KADdC,EAAMF,EAAII,YAAaH,IAEfD,EAEDA,EAAIK,UAAW,EAAGH"}